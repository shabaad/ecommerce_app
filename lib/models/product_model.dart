///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ProductModelProductsMeta {
/*
{
  "createdAt": "2024-05-23T08:56:21.618Z",
  "updatedAt": "2024-05-23T08:56:21.618Z",
  "barcode": "9164035109868",
  "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
} 
*/

  String? createdAt;
  String? updatedAt;
  String? barcode;
  String? qrCode;

  ProductModelProductsMeta({
    this.createdAt,
    this.updatedAt,
    this.barcode,
    this.qrCode,
  });
  ProductModelProductsMeta.fromJson(Map<String, dynamic> json) {
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    barcode = json['barcode']?.toString();
    qrCode = json['qrCode']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['barcode'] = barcode;
    data['qrCode'] = qrCode;
    return data;
  }
}

class ProductModelProductsReviews {
/*
{
  "rating": 2,
  "comment": "Very unhappy with my purchase!",
  "date": "2024-05-23T08:56:21.618Z",
  "reviewerName": "John Doe",
  "reviewerEmail": "john.doe@x.dummyjson.com"
} 
*/

  int? rating;
  String? comment;
  String? date;
  String? reviewerName;
  String? reviewerEmail;

  ProductModelProductsReviews({
    this.rating,
    this.comment,
    this.date,
    this.reviewerName,
    this.reviewerEmail,
  });
  ProductModelProductsReviews.fromJson(Map<String, dynamic> json) {
    rating = json['rating']?.toInt();
    comment = json['comment']?.toString();
    date = json['date']?.toString();
    reviewerName = json['reviewerName']?.toString();
    reviewerEmail = json['reviewerEmail']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['rating'] = rating;
    data['comment'] = comment;
    data['date'] = date;
    data['reviewerName'] = reviewerName;
    data['reviewerEmail'] = reviewerEmail;
    return data;
  }
}

class ProductModelProductsDimensions {
/*
{
  "width": 23.17,
  "height": 14.43,
  "depth": 28.01
} 
*/

  double? width;
  double? height;
  double? depth;

  ProductModelProductsDimensions({
    this.width,
    this.height,
    this.depth,
  });
  ProductModelProductsDimensions.fromJson(Map<String, dynamic> json) {
    width = json['width']?.toDouble();
    height = json['height']?.toDouble();
    depth = json['depth']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['width'] = width;
    data['height'] = height;
    data['depth'] = depth;
    return data;
  }
}

class ProductModelProducts {
/*
{
  "id": 1,
  "title": "Essence Mascara Lash Princess",
  "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
  "category": "beauty",
  "price": 9.99,
  "discountPercentage": 7.17,
  "rating": 4.94,
  "stock": 5,
  "tags": [
    "beauty"
  ],
  "brand": "Essence",
  "sku": "RCH45Q1A",
  "weight": 2,
  "dimensions": {
    "width": 23.17,
    "height": 14.43,
    "depth": 28.01
  },
  "warrantyInformation": "1 month warranty",
  "shippingInformation": "Ships in 1 month",
  "availabilityStatus": "Low Stock",
  "reviews": [
    {
      "rating": 2,
      "comment": "Very unhappy with my purchase!",
      "date": "2024-05-23T08:56:21.618Z",
      "reviewerName": "John Doe",
      "reviewerEmail": "john.doe@x.dummyjson.com"
    }
  ],
  "returnPolicy": "30 days return policy",
  "minimumOrderQuantity": 24,
  "meta": {
    "createdAt": "2024-05-23T08:56:21.618Z",
    "updatedAt": "2024-05-23T08:56:21.618Z",
    "barcode": "9164035109868",
    "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
  },
  "images": [
    "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png"
  ],
  "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
} 
*/

  int? id;
  String? title;
  String? description;
  String? category;
  double? price;
  double? discountPercentage;
  double? rating;
  int? stock;
  List<String?>? tags;
  String? brand;
  String? sku;
  int? weight;
  ProductModelProductsDimensions? dimensions;
  String? warrantyInformation;
  String? shippingInformation;
  String? availabilityStatus;
  List<ProductModelProductsReviews?>? reviews;
  String? returnPolicy;
  int? minimumOrderQuantity;
  ProductModelProductsMeta? meta;
  List<String?>? images;
  String? thumbnail;

  ProductModelProducts({
    this.id,
    this.title,
    this.description,
    this.category,
    this.price,
    this.discountPercentage,
    this.rating,
    this.stock,
    this.tags,
    this.brand,
    this.sku,
    this.weight,
    this.dimensions,
    this.warrantyInformation,
    this.shippingInformation,
    this.availabilityStatus,
    this.reviews,
    this.returnPolicy,
    this.minimumOrderQuantity,
    this.meta,
    this.images,
    this.thumbnail,
  });
  ProductModelProducts.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    title = json['title']?.toString();
    description = json['description']?.toString();
    category = json['category']?.toString();
    price = json['price']?.toDouble();
    discountPercentage = json['discountPercentage']?.toDouble();
    rating = json['rating']?.toDouble();
    stock = json['stock']?.toInt();
  if (json['tags'] != null) {
  final v = json['tags'];
  final arr0 = <String>[];
  v.forEach((v) {
  arr0.add(v.toString());
  });
    tags = arr0;
    }
    brand = json['brand']?.toString();
    sku = json['sku']?.toString();
    weight = json['weight']?.toInt();
    dimensions = (json['dimensions'] != null) ? ProductModelProductsDimensions.fromJson(json['dimensions']) : null;
    warrantyInformation = json['warrantyInformation']?.toString();
    shippingInformation = json['shippingInformation']?.toString();
    availabilityStatus = json['availabilityStatus']?.toString();
  if (json['reviews'] != null) {
  final v = json['reviews'];
  final arr0 = <ProductModelProductsReviews>[];
  v.forEach((v) {
  arr0.add(ProductModelProductsReviews.fromJson(v));
  });
    reviews = arr0;
    }
    returnPolicy = json['returnPolicy']?.toString();
    minimumOrderQuantity = json['minimumOrderQuantity']?.toInt();
    meta = (json['meta'] != null) ? ProductModelProductsMeta.fromJson(json['meta']) : null;
  if (json['images'] != null) {
  final v = json['images'];
  final arr0 = <String>[];
  v.forEach((v) {
  arr0.add(v.toString());
  });
    images = arr0;
    }
    thumbnail = json['thumbnail']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['title'] = title;
    data['description'] = description;
    data['category'] = category;
    data['price'] = price;
    data['discountPercentage'] = discountPercentage;
    data['rating'] = rating;
    data['stock'] = stock;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['tags'] = arr0;
    }
    data['brand'] = brand;
    data['sku'] = sku;
    data['weight'] = weight;
    if (dimensions != null) {
      data['dimensions'] = dimensions!.toJson();
    }
    data['warrantyInformation'] = warrantyInformation;
    data['shippingInformation'] = shippingInformation;
    data['availabilityStatus'] = availabilityStatus;
    if (reviews != null) {
      final v = reviews;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['reviews'] = arr0;
    }
    data['returnPolicy'] = returnPolicy;
    data['minimumOrderQuantity'] = minimumOrderQuantity;
    if (meta != null) {
      data['meta'] = meta!.toJson();
    }
    if (images != null) {
      final v = images;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['images'] = arr0;
    }
    data['thumbnail'] = thumbnail;
    return data;
  }
}

class ProductModel {
/*
{
  "products": [
    {
      "id": 1,
      "title": "Essence Mascara Lash Princess",
      "description": "The Essence Mascara Lash Princess is a popular mascara known for its volumizing and lengthening effects. Achieve dramatic lashes with this long-lasting and cruelty-free formula.",
      "category": "beauty",
      "price": 9.99,
      "discountPercentage": 7.17,
      "rating": 4.94,
      "stock": 5,
      "tags": [
        "beauty"
      ],
      "brand": "Essence",
      "sku": "RCH45Q1A",
      "weight": 2,
      "dimensions": {
        "width": 23.17,
        "height": 14.43,
        "depth": 28.01
      },
      "warrantyInformation": "1 month warranty",
      "shippingInformation": "Ships in 1 month",
      "availabilityStatus": "Low Stock",
      "reviews": [
        {
          "rating": 2,
          "comment": "Very unhappy with my purchase!",
          "date": "2024-05-23T08:56:21.618Z",
          "reviewerName": "John Doe",
          "reviewerEmail": "john.doe@x.dummyjson.com"
        }
      ],
      "returnPolicy": "30 days return policy",
      "minimumOrderQuantity": 24,
      "meta": {
        "createdAt": "2024-05-23T08:56:21.618Z",
        "updatedAt": "2024-05-23T08:56:21.618Z",
        "barcode": "9164035109868",
        "qrCode": "https://assets.dummyjson.com/public/qr-code.png"
      },
      "images": [
        "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/1.png"
      ],
      "thumbnail": "https://cdn.dummyjson.com/products/images/beauty/Essence%20Mascara%20Lash%20Princess/thumbnail.png"
    }
  ],
  "total": 194,
  "skip": 0,
  "limit": 30
} 
*/

  List<ProductModelProducts?>? products;
  int? total;
  int? skip;
  int? limit;

  ProductModel({
    this.products,
    this.total,
    this.skip,
    this.limit,
  });
  ProductModel.fromJson(Map<String, dynamic> json) {
  if (json['products'] != null) {
  final v = json['products'];
  final arr0 = <ProductModelProducts>[];
  v.forEach((v) {
  arr0.add(ProductModelProducts.fromJson(v));
  });
    products = arr0;
    }
    total = json['total']?.toInt();
    skip = json['skip']?.toInt();
    limit = json['limit']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (products != null) {
      final v = products;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['products'] = arr0;
    }
    data['total'] = total;
    data['skip'] = skip;
    data['limit'] = limit;
    return data;
  }
}
